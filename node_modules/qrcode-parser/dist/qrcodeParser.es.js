import e from"jsqr";import r from"upng-js";var t=function(t){try{return Promise.resolve(new Promise(function(n,o){var i=new FileReader;i.readAsArrayBuffer(t),i.addEventListener("loadend",function(){var t=r.decode(i.result),s=r.toRGBA8(t)[0],a=e(new Uint8ClampedArray(s),t.width,t.height);null!==a?n(a.data):o(new Error("decode failed"))})}))}catch(e){return Promise.reject(e)}},n=function(e){try{var r;return e instanceof File&&"[object File]"===Object.prototype.toString.call(e)?(r=e.slice(),Promise.resolve(t(r))):"string"==typeof e&&function(e){try{return btoa(atob(e))===e}catch(e){return!1}}(e)?(r=function(e,r,t){void 0===r&&(r=""),void 0===t&&(t=512);for(var n=atob(e),o=[],i=0;i<n.length;i+=t){for(var s=n.slice(i,i+t),a=new Array(s.length),u=0;u<s.length;u++)a[u]=s.charCodeAt(u);var c=new Uint8Array(a);o.push(c)}return new Blob(o,{type:r})}(e),Promise.resolve(t(r))):"string"==typeof e&&function(e){if("string"!=typeof e)throw new TypeError("Expected a string");if((e=e.trim()).includes(" "))return!1;try{return new URL(e),!0}catch(e){return!1}}(e)?Promise.resolve(new Promise(function(n,o){var i=new XMLHttpRequest;i.open("GET",e),i.responseType="blob",i.onload=function(){i.status>=200&&i.status<300?t(r=i.response).then(function(e){return n(e)}).catch(function(e){return o(e)}):o(i.statusText)},i.onerror=function(){return o(i.statusText)},i.send()})):Promise.reject(new Error("The input type is invalid"))}catch(e){return Promise.reject(e)}};export{n as default};
//# sourceMappingURL=qrcodeParser.es.js.map
